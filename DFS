def dfs_iterative(graph, start):
    visited = set()  
    stack = [start]  
    print("Iterative DFS Traversal:")  
    while stack:
        node = stack.pop()
        if node not in visited:
            print(node, end=" ")  
            visited.add(node)     
            for neighbor in reversed(graph[node]):
                if neighbor not in visited:
                    stack.append(neighbor)

    print("\n")
def dfs_recursive(graph, node, visited=None):
    if visited is None:
        visited = set()
    visited.add(node)
    print(node, end=" ")
    for neighbor in graph[node]:
        if neighbor not in visited:
            dfs_recursive(graph, neighbor, visited)
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}
dfs_iterative(graph, 'A')
print("Recursive DFS Traversal:")
dfs_recursive(graph, 'A')
print()
